#
# Default Bacula Director Configuration file
#
#  The only thing that MUST be changed is to add one or more
#   file or directory names in the Include directive of the
#   FileSet resource.
#
#  For Bacula release 7.4.7 (16 March 2017) -- redhat (Core)
#
#  You might also want to change the default email address
#   from root to your address.  See the "mail" and "operator"
#   directives in the Messages resource.
#
# Copyright (C) 2000-2015 Kern Sibbald
# License: BSD 2-Clause; see file LICENSE-FOSS
#
 
Director {                            # define myself
  Name = bacula-dir
  DIRport = 9101                # where we listen for UA connections
  QueryFile = "/etc/bacula/query.sql"
  WorkingDirectory = "/var/spool/bacula"
  PidDirectory = "/var/run"
  Maximum Concurrent Jobs = 20
  Password = "{{ bacula_password }}"         # Console password
  Messages = Daemon
}

JobDefs {
  Name = "DefaultJob"
  Type = Backup
  Level = Incremental
  Client = bacula-fd
  FileSet = "Full Set"
  Schedule = "WeeklyCycle"
  Storage = File1
  Messages = Standard
  Pool = File1
  Write Bootstrap = "/var/spool/bacula/%c.bsr"
}

## "{{ client1 }}" (This is a sample Job. Please edit.)
Job {
  Name = "{{ client1 }}"
  Type = Backup
  Client = "{{ client1 }}"
  FileSet = "{{ client1 }}"
  Schedule = "{{ client1 }}Cycle"
  Storage = "{{ client1 }}"
  Messages = Standard
  Full Backup Pool = {{ client1 }}-Full
  Incremental Backup Pool = {{ client1 }}-Inc
  Differential Backup Pool = {{ client1 }}-Diff
  Pool = File1
  SpoolAttributes = yes
  Priority = 10
  Write Bootstrap = "/var/spool/bacula/%c.bsr"
}

# Backup the catalog database (after the nightly save)
Job {
  Name = "BackupCatalog"
  JobDefs = "DefaultJob"
  Level = Full
  FileSet="Catalog"
  Schedule = "WeeklyCycleAfterBackup"
  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup.pl are:
  #  make_catalog_backup.pl <catalog-name>
  RunBeforeJob = "/usr/libexec/bacula/make_catalog_backup.pl MyCatalog"
  # This deletes the copy of the catalog
  RunAfterJob  = "/usr/libexec/bacula/delete_catalog_backup"
  Write Bootstrap = "/var/spool/bacula/%n.bsr"
  Priority = 11                   # run after main backup
}

#
# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...
#
Job {
  Name = "RestoreFiles"
  Type = Restore
  Client=bacula-fd
  Storage = File1
# The FileSet and Pool directives are not used by Restore Jobs
# but must not be removed
  FileSet="Full Set"
  Pool = File1
  Messages = Standard
  Where = /tmp/bacula-restores
}

# restore "{{ client1 }}" (This is a sample Job. Please edit.)
Job {
  Name = "Restore{{ client1 }}"
  Type = Restore
  Client="{{ client1 }}"
  Storage = "{{ client1 }}"
  FileSet="{{ client1 }}"
  Full Backup Pool = {{ client1 }}-Full
  Incremental Backup Pool = {{ client1 }}-Inc
  Differential Backup Pool = {{ client1 }}-Diff
  Pool = File1
  Messages = Standard
  Where = /tmp/bacula-restores
}

# List of files to be backed up
FileSet {
  Name = "Full Set"
  Include {
    Options {
      signature = MD5
    }
    File = /
  }
  Exclude {
    File = /var/spool/bacula
    File = /tmp
    File = /proc
    File = /sys
    File = /.journal
    File = /.fsck
  }
}

## "{{ client1 }}" (This is a sample Job. Please edit.)
FileSet {
  Name = "{{ client1 }}"
  Include {
    Options {
      signature = MD5
      compression = GZIP
    }
    # please edit
    File = /etc
    File = /home
  }
}

#
# When to do the backups, full backup on first sunday of the month,
#  differential (i.e. incremental since full) every other sunday,
#  and incremental backups other days
Schedule {
  Name = "WeeklyCycle"
  Run = Full 1st sun at 23:05
  Run = Differential 2nd-5th sun at 23:05
  Run = Incremental mon-sat at 23:05
}

# "{{ client1 }}" (This is a sample Job. Please edit.)
Schedule {
  Name = "{{ client1 }}Cycle"
  Run = Full 1st sun at 07:05
  Run = Differential 2nd-5th sun at 07:05
  Run = Incremental mon-sat at 07:05
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full sun-sat at 23:10
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/var/spool/bacula/bacula.sql"
  }
}

# Client (File Services) to backup
Client {
  Name = bacula-fd
  Address = localhost
  FDPort = 9102
  Catalog = MyCatalog
  Password = "{{ bacula_password }}"          # password for FileDaemon
  File Retention = 60 days            # 60 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}


# "{{ client1 }}" (This is a sample Job. Please edit.)
Client {
  Name = "{{ client1 }}"
  Address = "{{ client1_ip }}"
  FDPort = 9102
  Catalog = MyCatalog
  Password = "{{ bacula_password }}"          # password for FileDaemon
  File Retention = 30 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}

# Definition of file Virtual Autochanger device
Storage {
  Name = File1
  Address = "{{ server_ip }}"                # N.B. Use a fully qualified name here
  SDPort = 9103
  Password = "{{ bacula_password }}"
  Device = File1
  Media Type = File
  Maximum Concurrent Jobs = 10        # run up to 10 jobs a the same time
}

# "{{ client1 }}" (This is a sample Job. Please edit.)
Storage {
  Name = "{{ client1 }}"
  Address = "{{ server_ip }}"                # N.B. Use a fully qualified name here
  SDPort = 9103
  Password = "{{ bacula_password }}"
  Device = "{{ client1 }}"
  Media Type = File
  Maximum Concurrent Jobs = 10        # run up to 10 jobs a the same time
}

# Generic catalog service
Catalog {
  Name = MyCatalog
  dbname = "bacula"; dbuser = "bacula"; dbpassword = "{{ bacula_db_password }}"
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard

  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = root@localhost = all, !skipped
  operator = root@localhost = mount
  console = all, !skipped, !saved

  append = "/var/log/bacula/bacula.log" = all, !skipped
  catalog = all
}


#
# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = root@localhost = all, !skipped
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
}

# Default pool definition
Pool {
  Name = Default
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
}

# File Pool definition
Pool {
  Name = File1
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 10              # Limit number of Volumes in Pool
  Label Format = "Vol-"               # Auto label
}

# "{{ client1 }}" (This is a sample Job. Please edit.)
Pool {
  Name = {{ client1 }}-Full
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 2 months
  Label Format = "{{ client1 }}-Full-"               # Auto label
  Maximum Volumes = 20              # Limit number of Volumes in Pool
}

Pool {
  Name = {{ client1 }}-Diff
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 40 days
  Label Format = "{{ client1 }}-Diff-"               # Auto label
  Maximum Volumes = 40              # Limit number of Volumes in Pool
}

Pool {
  Name = {{ client1 }}-Inc
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 20 days
  Label Format = "{{ client1 }}-Inc-"               # Auto label
  Maximum Volumes = 60             # Limit number of Volumes in Pool
}

# Scratch pool definition
Pool {
  Name = Scratch
  Pool Type = Backup
}

#
# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = bacula-mon
  Password = "{{ bacula_password }}"
  CommandACL = status, .status
}
